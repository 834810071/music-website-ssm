<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 1. 扫描service下的包 -->
    <context:component-scan base-package="com.example.demo.service"/>

    <!-- 2. 将我们所有的业务类注入到spring,可以通过配置，或者注解实现 -->
    <bean id="AdminServiceImpl" class="com.example.demo.service.impl.AdminServiceImpl">
        <property name="adminMapper" ref="adminMapper"/>
    </bean>
    <bean id="CollectServiceImpl" class="com.example.demo.service.impl.CollectServiceImpl">
        <property name="collectMapper" ref="collectMapper"/>
    </bean>
    <bean id="CommentServiceImpl" class="com.example.demo.service.impl.CommentServiceImpl">
        <property name="commentMapper" ref="commentMapper"/>
    </bean>
    <bean id="ConsumerServiceImpl" class="com.example.demo.service.impl.ConsumerServiceImpl">
        <!-- ServiceImpl 中需要由set方法 -->
        <property name="consumerMapper" ref="consumerMapper"/>
    </bean>
    <bean id="ListSongServiceImpl" class="com.example.demo.service.impl.ListSongServiceImpl">
        <property name="listSongMapper" ref="listSongMapper"/>
    </bean>
    <bean id="RankServiceImpl" class="com.example.demo.service.impl.RankServiceImpl">
        <property name="rankMapper" ref="rankMapper"/>
    </bean>
    <bean id="SingerServiceImpl" class="com.example.demo.service.impl.SingerServiceImpl">
        <property name="singerMapper" ref="singerMapper"/>
    </bean>
    <bean id="SongListServiceImpl" class="com.example.demo.service.impl.SongListServiceImpl">
        <property name="songListMapper" ref="songListMapper"/>
    </bean>
    <bean id="SongServiceImpl" class="com.example.demo.service.impl.SongServiceImpl">
        <property name="songMapper" ref="songMapper"/>
    </bean>


    <!-- 3. 声明式事务配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 4. aop事务支持 -->
    <!-- 结合AOP实现事务的植入-->
    <!-- 配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 给那些方法配置事务-->
        <!-- 配置事务的传播特性： new propagation = -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切入-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.example.demo.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

</beans>